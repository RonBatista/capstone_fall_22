Project: AgriLife - Canopy Attributes Generator

Description: The Canopy Attributes Generator is an Essential tool provided by AgriLife and is hosted on the UASHUB website. This tools functionality allows
engineers as well as nontechnical users such as agronomists and farmers to generate canopy attributes for a given location and time with the use of TIFF images
generated from Unmanned Aerial System (UAS) flights. With further analysis of the results will then allow farmers and agronomists monitor and tend to their crops
in a more effective way. What took engineers hours to do by hand, the Canopy Attributes Generator can generate within tens of minutes.
To use the tool, the user simply needs to specify the project's name, an Orthomosaic file, the sensor and platforms that were used to take the orthomosaic image
and optionally a Canopy Height Model file. After specifying an Orthomosaic and Canopy Height Model files, tables will populate with checkboxes, allowing the user
to specify what canopy attributes to generate including the Canopy Cover, Canopy Height, Canopy Volume and Excess Greeness. It's important to note, the Canopy Height
and Volume unless a Canopy height Model file is specified when generating the canopy attributes. By then clicking the "Generate Results"
button, the requested results will be generated on the server. Following the completion of the generating attributes, the user can then select the canopy attributes
and file formats (Shape, GeoJSON, CSV and XLSX) they would like to download. Doing so and clicking the "Download Generated Files" button will then download a Zip file
of the specified attributes and file formats. These results could then be analyzed using software such as QGIS, an information system application used to edit and analyze
geospatial data. After thorough analysis, farmers, agronomists as well as others could then tend to their crops in a more effective way using the data generated by the tool.
At the moment, the tool is only able to generate the results for one given orthomosaic image as well as one Canopy height model. The feature of generating attributes given multiple
Orthomosaics and Canopy Height Models should be seen as the next primary feature that should be implemented to bring convenience for the users and for the use of generator to be even more practical.

How it works: To give an overview of the project and how it works, the tools user interface was built with HTML and CSS with the pre-existing CSS classes (index.php). The functionality
of the dropdown menus, buttons and tables are written in JavaScript(main.js). Using JavaScript, JQuery, PHP, Ajax and SQL, we can populate the different fields located on the tool including the Project,
Orthomosaic, Boundary and the Canopy height Model(CHM) files. The best example to view this is tracing the GetOrthomosiacList function located in the main.js file. It's important to note
here how the items values consist of a string containing different variables separated by the delimiter "::". By doing so, we can pass multiple attributes of the selected items
to the Python file that is called to generate canopy attributes. To note, the Boundary, Orthomosaic and Canopy Height Models drop down meus are populated with respect to what Project, Platform and Sensor are selected.
Upon selecting the different fields and clicking the "Generate Results" button, the specified items from the drop down menus and the states of the canopy attributes checkboxes
are grabbed and sent to the main Python file (generate_dat_files_new.py) through an Ajax call in the function call_generateResults located in the main JavaScript file. While the Python file
is called and canopy attributes are being generated, a loading page is shown and then again hidden once a response is received. During this time, in the Python file (generate_dat_files_new.py) different functions are called
generating the directories used to store the generated results, specifying the different paths generated from the items previously selected on the website and then computing the requested results with the
different algorithms and finally generating the resulted Shape files and converting them to the other file formats (GeoJSON, CSV and XLSX) using ogr2ogr (GDAL conversion tool).
path to the resulted directories containing the resulted file formats: ~/web/uas_data/downloads/product/<Project_name>/<OrthomosaicName>_<BoudnaryName>/
After the different directories and files are generated, the user then specifies the canopy attributes and file formats they want to download and then click "Download Generated Files".
This then triggers a function called generateZIP in the main.js file that grabs the specified items from the drop down menus and the states of the canopy attributes checkboxes
which uses an Ajax call to a PHP file which then calls Python code to generate a zip file containing the different files specified by the user (generateZip.py). If the call to generate the
Zip file is successful, another function called downloadZip is then called in the main.js file that downloads the Zip with its path using window.open. Once the files are downloaded by the client, another function
is called to delete the temporary results directory and the zip file that are created. The client then can view the generated results on their computer.


Dependencies:

	pip install geopandas
	pip install xlwt

*geopandas library is used only to read the CRS (Coordinate Reference System) of the generated/converted GeoJSON file to ensure the CRS is correct. If not we convert it to the correct CRS using GDAL (ogr2ogr).
xlwt may no need to be installed as it was previously used to help geopandas convert the shape file to the XLS format. We now however use GDAL Ogr2Ogr to convert shape to the XLSX file format type.

Developers:
Christian Leal - https://www.linkedin.com/in/christianleal/	- lealschristian@gmail.com
Taylor Converse - https://www.linkedin.com/in/conversetaylor/
Tristan Raine - https://www.linkedin.com/in/tristan-raine/
